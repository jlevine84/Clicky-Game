{"version":3,"sources":["../clicky-game/src/components/header/Header.js","../clicky-game/src/components/footer/Footer.js","../clicky-game/src/components/gameinfo/GameInfo.js","../clicky-game/src/components/card/Card.js","../clicky-game/src/components/gameview/GameView.js","../clicky-game/src/components/body/Body.js","../clicky-game/src/App.js","../clicky-game/src/index.js"],"names":["Header","react_default","a","createElement","className","Footer","GameInfo","props","score","highScore","Card","id","value","points","src","image","alt","name","onClick","selectCard","GameView","state","characters","guessed","gameOver","_this","alert","concat","setState","resetGame","shuffleCards","event","target","randomNum","Math","floor","random","includes","push","shuffle","i","length","j","_ref","this","_this2","map","toons","card_Card","bind","key","gameinfo_GameInfo","React","Component","Body","gameview_GameView","App","header_Header","body_Body","footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97aca8e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./header.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header className=\"row no-gutters\">\r\n        <div className=\"col 3\"></div>\r\n        <div className=\"col 6\">\r\n          <h1>South Park Clicky Game</h1>\r\n        </div>\r\n        <div className=\"col 3\"></div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./footer.css\"\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <footer>Footer</footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport './gameinfo.css'\r\n\r\nfunction GameInfo(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"instructions\">\r\n          <div className=\"box\">\r\n            <p><strong>To Begin, click on a character card!</strong></p>\r\n            <p><strong>Clicking on a character you've already clicked will end the game!</strong></p>\r\n            <p><strong>Each character is a worth random amount between 1 and 5!</strong></p>\r\n            <p><strong>Get the highest score you can!</strong></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters\">\r\n\r\n        <div className=\"scores\">\r\n          <div className=\"box2\">\r\n            <div className=\"score\">\r\n              <p><strong>Current Score:</strong></p>\r\n              <p><strong>{props.score}</strong></p>\r\n            </div>\r\n            <span className=\"score\">\r\n              <p><strong>High Score:</strong></p>\r\n              <p><strong>{props.highScore}</strong></p>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default GameInfo","import React from 'react';\r\nimport \"./card.css\"\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"toons animated flipInX\" id={props.id} value={props.points}>\r\n      <img src={props.image} alt={props.name} id={props.id} value={props.points} onClick={props.selectCard}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport GameInfo from '../gameinfo/GameInfo'\r\nimport Card from '../card/Card'\r\nimport characters from '../../characters.json'\r\nimport \"./gameview.css\"\r\nimport \"../card/card.css\"\r\n\r\nclass GameView extends React.Component {\r\n  state = {\r\n    score: 0,\r\n    highScore: 0,\r\n    characters: characters,\r\n    guessed: []\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.shuffleCards()\r\n  }\r\n\r\n  gameOver = () => {\r\n    if (this.state.score && this.state.highScore === 0) {\r\n      alert(`Game over! You scored ${this.state.score} points on your first try!`)\r\n      this.setState({highScore: this.state.score})\r\n    } else if (this.state.score === this.state.highScore) {\r\n      alert(`You tied the high score of ${this.state.highScore}. Try again to beat it!`)\r\n    } else if (this.state.score < this.state.highScore) {\r\n      alert(`Game over! You scored ${this.state.score} points. Try again to beat the high score of ${this.state.highScore}!`)\r\n    } else {\r\n      this.setState({highScore: this.state.score})\r\n      alert(`Congratulations! You've set a new High Score of ${this.state.highScore}. Play again to see if you can beat it!`)\r\n    }\r\n    this.resetGame()\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      score: 0,\r\n      guessed: [],\r\n    })\r\n    this.shuffleCards()\r\n  }\r\n\r\n  selectCard = (event) => {\r\n    let id = event.target.id\r\n    let randomNum = Math.floor((Math.random() * 5) + 1);\r\n    if (this.state.guessed.includes(id)) {\r\n      //Game Over!\r\n      this.gameOver()\r\n    } else {\r\n      //Continue playing!\r\n      this.state.guessed.push(id)\r\n      this.setState({score: this.state.score + randomNum})\r\n      this.shuffleCards()\r\n    }\r\n  }\r\n\r\n  shuffleCards = () => {\r\n    let shuffle = this.state.characters\r\n    for (let i = shuffle.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffle[i], shuffle[j]] = [shuffle[j], shuffle[i]];\r\n    }\r\n    this.setState({\r\n      characters: shuffle\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"maingame\">\r\n            {this.state.characters.map(toons => (\r\n              <Card\r\n              selectCard={this.selectCard.bind(this)}\r\n              id={toons.id}\r\n              key={toons.id}\r\n              name={toons.name}\r\n              image={toons.image}\r\n              value={toons.points}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"gameinfo\">\r\n            <GameInfo\r\n            score={this.state.score}\r\n            highScore={this.state.highScore}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameView;","import React from 'react';\r\nimport GameView from '../gameview/GameView'\r\nimport \"./body.css\"\r\n\r\nclass Body extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"title\"></div>\r\n        <div className=\"game\">\r\n          <GameView/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport Header from './components/header/Header'\nimport Footer from './components/footer/Footer'\nimport Body from './components/body/Body'\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <Header/>\n        <Body/>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}